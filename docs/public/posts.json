[
  {
    "url": "/thoughts/竟然被回关.html",
    "frontmatter": {
      "title": "竟然被回关",
      "date": "2025-06-09 16:38:50",
      "description": "其实也没发生什么大事。就是……竟然被 Airthead 回关了。",
      "publish": true,
      "tags": [
        "生活记录"
      ]
    },
    "content": "\n# 序 - 风未起\n\n其实也没发生什么大事。就是……竟然被 Airthead 回关了。\n\n![](../public/images/文章资源/竟然被回关/file-20250609163930102.jpg)\n\n是 劈里啪啦 上那只好会画狼的创作者。关注他也有一阵了，第一次看到他的作品，就像撞上一种久违的气味——熟悉又新鲜，让人忍不住想靠近，却又有点不敢。\n\n他画的狼，总带着一种特别的气质。不仅是单纯的野性或者帅气，而是……某种我渴望过、梦中的样子。是在我沉浸的幻想世界里，也曾见过那样的獠牙和利爪。\n\n![](../public/images/文章资源/竟然被回关/file-20250609164044458.jpg)\n\n# 叙 - 不为回应\n\n那天日常登上 B 站，点开小红点时，消息框里出现了他的名字。我愣了几秒，反复确认了好几遍。那一瞬，满脑子都是“真的假的？！”\n\n早在我发现他时，就追着加进了他的群聊。其实他特别好聊，一有话题就能跟大家聊很久，气氛轻松友好。总之，人真的超级好！\n而且他还不失有趣。比如他居然会对 **蟑螂** 感兴趣，收藏了一堆奇怪的蟑螂跳舞视频，像是什么隐秘的地下派对资料库……\n\n---\n\n> 就像这种: ↓↓↓\n> ![](../public/images/文章资源/竟然被回关/file-20250609182158378.gif)\n\n谁能想到一个把狼画得那么有气势的人，脑子里还装着这种稀奇古怪的小癖好？但仔细想想，好像也不奇怪。毕竟很多大艺术家都有点奇怪的小癖好——比如村上隆喜欢画糖果风的怪物，达利爱养蚂蚁……哪个不是怪得可爱？\n\n更巧的是，我们玩的游戏也重合得离谱，好几次看到他发的视频，我都惊喜地发现：“诶，我也玩过这个！”。\n\n> [“要不要一起玩？”]\n\n本来是很好的话题切口吧？但话到嘴边总是收住。超级社恐开始发力了，总会被“别太刻意了”“会不会太打扰了”的念头绊住。（悲\n\n嗷，好想靠近，却怕走得太急...\n\n所以，就这样先记下来。\n当做一个小记号。就算只是个“回关”，对我来说也是一个能反复回想的小瞬间。就像林子深处传来一声熟悉的嗥叫，那声音不是喊你，也没带任何承诺，但你听见了，就开始忍不住往那个方向迈步。\n\n如果哪天，我也能自然地说上一句“可以和我一起玩游戏吗！”，那我一定是喝中药把社恐调理好了(\n\n今天就先这样吧。风停了，尾巴还在晃~\n\n# 续 - 风卷至\n\n**收到好友申请了。**\n\n![](../public/images/文章资源/竟然被回关/file-20250612210457164.jpg)\n\n心跳一下子快到不受控，语言系统直接宕机，整个脑子只剩下乱码。\n然后反应过来的第一件事竟然是：\n\n> 要先截图\n\n就像是在给这一刻盖个章，留个证据，证明它真的发生过。\n\n---\n\n我试图组织一点像人类的话说出口。  \n但这种时候越想“别太激动”，就越像一只激动的傻狗。\n\n手指悬在输入框上打了一半，删掉，重打、再删，再打，再删。\n\n![](../public/images/文章资源/竟然被回关/file-20250613003011268.jpg)\n\n最后干脆打了一个字发了一个表情，长叹一口气。  \n“啊，我完蛋了。我连一个招呼都打不利索。”\n\n但最后发现——其实根本是我多虑了....\n\n我以为我得再酝酿半天，找个不尴尬的契机提起这篇文章。  \n结果他比我先一步开口了，还顺手引用了我写的那句：\n\n> “达利爱养蚂蚁…”\n\n**他真的看过了。**\n\n那些藏着心思的小括号、琢磨半天才写出的语气词、我不敢明说的那点崇拜和欢喜。  \n他不仅看了，还顺着那句接了一句：\n\n> “我还真养蚂蚁。”\n\n甚至还说：\n\n> “我平常也不好意思加别人，都是想着说别人来加我……”\n\n**——我完了，我的防线崩得一塌糊涂。**\n\n---\n\n当初写这篇文章的时候还在想，要是他看到就好了——就算只是扫一眼标题，也够我叼着这点东西，溜回巢里偷偷反刍好久。\n\n可那种想法又太奢侈了，奢侈到连自己都不敢认真对待。所以更多时候，我还是把博客当成是写给自己的东西，发出来。万一……万一有那么一阵风，刚好把其中一丝气息卷到他面前呢？那就当作是风擅自做主，送了一个心照不宣的讯号。\n\n**结果今天……**\n\n命运哪是一阵微风啊！它是直接把我小心翼翼藏着的骨头，猛地掀开、把气息毫无保留地传递过去，还是在我毫无防备的时候。\n把我心里那个装着所有预设和忐忑的小盒子直接掀翻了，碎片和彩带炸得漫天都是，只剩下一个在原地懵圈的我，和那颗还在疯狂擂鼓的心（\n\n# 絮 - 风仍在\n\n其实写到这已经有点词穷了。很多感觉……难说得太明白，说了也觉得不准，藏了又觉得可惜。\n\n我在回想最近和他聊的那些话，虽然不是很多。\n有些话是认真思考才说出口的，有些则是脱口而出，却依然真心。\n我总是比我预想中更在意他的反应，也比我想象中更自然地对他说很多话。\n\n或许从某一刻起，我就不只是“喜欢他的画”了。  \n我开始好奇他看待世界的方式，感受到他对人的温度，甚至在意他的表达背后藏着怎样的思考。  \n像是靠近一个我仰慕的人。\n\n这种感觉太稀有了，也太珍贵了。\n\n所以哪怕这只是生活里一小段微不足道的插曲，我也想把它记下来。\n只是我不想让这份情绪，就这样静静消散。  \n它值得被记录、被承认、被铭记。\n\n说了平时不会对人说的话，也多了一点久违的勇气。\n\n我不是个很外向的人，也常常社恐，而在这一切之后，我要——  \n慢慢改变、变得更大方一点！\n\n如果以后还能继续这样聊聊画、聊聊喜欢的东西，  \n哪怕只是偶尔说说话，我也会很开心。\n\n总之，能遇到这样一只，我真幸运！！！\n",
    "relativePath": "thoughts/竟然被回关.md",
    "excerpt": "# 序 - 风未起"
  },
  {
    "url": "/thoughts/光不在彼方.html",
    "frontmatter": {
      "title": "光不在彼方",
      "date": "2025-06-07 21:12:50",
      "description": "一段关于学习和成长的感悟，探讨过程与结果的关系，也给自己最真诚的回应。",
      "publish": true,
      "tags": [
        "反刍日志"
      ]
    },
    "content": "\n## 组装积木的乐趣\n\n最近正在学习 Krenz 大大的透视课，除了基本技巧，不知不觉还听进了许多有趣的观点。有些话语平实却深远，令人忍不住反复回味，遂在此将其记录下来。\n\n其中一段课上对话，让我印象深刻。\n\n一位同学在直播间发送了一条弹幕：\n\n> 画作业的时候想到，我得花十来分钟靠辅助线拉拉拉才能画出来的图，在 Blender 里可能三十秒不到就能完成，还能转各种角度，就感觉有点绝望。\n\nK大没有否定这种技术优势，而是认真回应道：\n\n> 这个东西有点像是探索的乐趣。你买一个完成的积木是很快呀，但组积木的愉快感，是不一样的嘛。\n\n这是一次非常巧妙的引导。他没有用任何\"正确答案\"压过对方，只是指出了一种常被忽略的价值：**自己动手的过程，本身就是乐趣。**\n\n由此，我不禁回想起自己的学习体会。\n\n如今的 claude3.7，甚至能完整还原网页，精准度高、速度快，偶然间也听过朋友对 AI 的感叹：\"AI 做都行了，感觉我写代码都没什么意义了。\"\n\n我承认，这确实是现状。身为初学者，我写代码不如 AI 快，也不如 AI 好，简历放在人群里也难以脱颖而出....\n但是，我对计算机的热爱是真实且不可替代的动力。\n\n我喜欢写下一行代码，页面随即发生变化的瞬间。  \n我喜欢调试时，Bug 被解决的那种\"通了\"的感觉。  \n我喜欢构建的过程——哪怕它不高效，哪怕它经常失败。\n\n你能体会那种指尖敲击，世界随之改变的快乐吗？这份感觉，是任何速成和复制都替代不了的。\n\n作家 Ted Chiang 在谈到 AI 和艺术创作时说的：\n\n> AI 可以模仿一幅画的样子，却无法经历创作过程中的犹豫、抉择、尝试和否定。\n\n创作的核心，不在于结果，而在于你曾投入多少心力与思考。\n\n## 人终有尽头，意义在于沿路\n\n曾有人在评论区写下这样一句话：\n\n> 人终究要死，那活着还有什么意义？\n\n我面对这个问题，也一时无言。  \n不是不能回答，而是还给不出一个自己真正能认同的答案。\n\n这个问题，我也曾反复思考过。\n\n可随着时间推移，我渐渐意识到：\n\n如果只看结果，那所有人的终点确实别无二致；  \n但如果你愿意把目光落回过程——你所走过的路、见过的风景、遇见的人、经历的失败与喜悦……\n这一切，才是真实而独特的存在。\n\n> \"结果也许定义了你拥有了什么，但过程才塑造了你是谁。\"\n\n我崇拜 K 大的温和与耐心，不只对别人，也对自己。  \n我希望我能够对每一个不懂的问题、每一个转不过弯的失败，允许它们存在，允许它们缓慢发生。\n\n写给曾经的自己，也写给此刻仍走在学习路上的我：  \n当你感到迷茫，开始怀疑——\"我这样做还有意义吗？\"  \n请听听这句来自心底的回应：\n\n**有意义。**\n\n你去做了，就是有意义。  \n不是终点光辉，而是你愿意走。  \n不是立刻强大，而是你没逃避。\n\n愿你在过程中找到自己，  \n愿你回望时无悔无憾。\n\n哪怕慢、哪怕拧巴，  \n也愿你自己拼出积木。\n\n过程决定你是谁，  \n这，才是最大的意义。\n\n愿我们终有一日，在回望这条路时，能由衷地说一句：\n\n\"这一切，我不后悔。\"\n",
    "relativePath": "thoughts/光不在彼方.md",
    "excerpt": "## 组装积木的乐趣"
  },
  {
    "url": "/thoughts/笔记本 Wi-Fi 消失的解决方法.html",
    "frontmatter": {
      "title": "笔记本 Wi-Fi 消失的解决方法",
      "date": "2025-06-02 16:06:56",
      "description": "笔记本 Wi-Fi 消失是怎么一回事呢?",
      "publish": true,
      "tags": [
        "避坑指南"
      ]
    },
    "content": "\r\n# 序\r\n\r\n由于我更喜欢 Win10 的界面风格（直角窗口和磁贴重度依赖患者），遂把本人的暗影骑士擎从默认的 Win11 强行刷至 Win10。\r\n刚刷完系统发现无限网络无法使用，美美从劈里啪啦（bilibili）下载了一个驱动大礼包安装。除了无限网络偶尔抽风，重启一下就解决了之外，一切都是岁月静好的。\r\n直到刚才，重启都无法像往常一样解决无线网络的抽风了。\r\n\r\n![](../public/images/文章资源/笔记本-wi-fi-消失的解决方法/file-20250525113038153.jpg)\r\n\r\n询问 ai 陷入死循环，最后还是上劈里啪啦，在[这个视频](https://www.bilibili.com/video/BV1GT4y127jb/?spm_id_from=333.337.search-card.all.click&vd_source=b19220b8f372f3a81aa8463fde694a63)的评论区里找到了一位大佬的方法，问题才得以解决。\r\n\r\n![](../public/images/文章资源/笔记本-wi-fi-消失的解决方法/file-20250525120807782.jpg)\r\n\r\n> 还有可能是自己的魔法上网工具没关，记得排查一下。\r\n\r\n我美丽的周日上午就这么被毁掉了 T_T\r\n在此记录总结一下经验，给健忘的自己用，要是能帮到其他人类就更好了，把这份精神传递下去！\r\n\r\n# 设备无线网卡是否正常\r\n\r\n首先，检查电脑有没有无线网络的驱动。\r\n\r\n> 驱动程序也是一种程序~~(废话)~~\r\n> 与浏览器这类程序不同，驱动程序是与硬件沟通的桥梁。\r\n\r\n打开 \"设备管理器\" 就能查看或更新设备以及驱动。\r\n要打开 \"设备管理器\" 的方式有很多种，我更喜欢直接在系统的搜索栏中搜索一切：\r\n\r\n![](../public/images/文章资源/笔记本-wi-fi-消失的解决方法/file-20250525115111952.jpg)\r\n\r\n在 \"设备管理器\" 找到我们需要排查问题的 \"网络适配器\"，点击下拉菜单，找到无线网卡（一般名字里会有\"Wireless\"或\"Wi-Fi\"）\r\n\r\n![](../public/images/文章资源/笔记本-wi-fi-消失的解决方法/file-20250525115525944.jpg)\r\n\r\n先假设如图最完美的情况，在网络适配器中有无限网卡的驱动，那么无线网卡硬件至少没完全寄。继续下一步。\r\n\r\n### 没有无限网卡/运行异常\r\n\r\n**没有无限网卡**\r\n多半是驱动压根没装上或被禁用了。\r\n先点菜单栏的【查看】→ 选中\"显示隐藏设备\"，看看有没有灰色显示的无线设备。\r\n如果这都找不到只能重新下载安装驱动了。\r\n\r\n**运行异常**\r\n如果有黄色的感叹号或代码 43/10 之类，说明驱动可能损坏或与系统不兼容。\r\n此时应**右键**卸载设备，并勾选\"**删除此设备的驱动程序软件**\"，除非你驱动本身没问题，只想重装驱动。否则系统下次重启时可能仍会自动加载旧的、出错的驱动，问题复发。\r\n\r\n以上两个问题，都要**下载并安装正确版本的无线网卡驱动**。一般来说，搜索自己电脑的型号，在官网就会有驱动下载方式。\r\n我的电脑由于强行降到 Win10 ，官网却只提供 Win11 的驱动程序，这时只能靠信息检索各凭本事去搜索合适的驱动了（也可以问问 AI）。\r\n\r\n> 没网怎么下驱动？除了去找个 u 盘到网吧下，\r\n> 还可以试试用手机打开热点，选择**用 USB 分享**网络连到电脑。无线用不了，有线总行吧。\r\n\r\n我的 AX211 在 Intel 官网就能找到并下载 Win10/11 通用的 [无限驱动程序](https://www.intel.cn/content/www/cn/zh/download/19351/intel-wireless-wi-fi-drivers-for-windows-10-and-windows-11.html)\r\n\r\n也可以试试 \"[驱动大礼包](https://pan.baidu.com/s/1WvFbn_p_UurESNMBx1PTfA#list/path=%2F)\" (我之前使用过，能用。但可不保证完全没有问题)\r\n[万能网卡驱动原帖](https://www.toprender.com/thread-227817-1-1.html)\r\n[b 站视频](https://www.bilibili.com/video/BV1924y177PP/?spm_id_from=333.337.search-card.all.click&vd_source=b19220b8f372f3a81aa8463fde694a63)\r\n\r\n安装驱动后，记得重启再检查设备管理器中无限网卡是否正常安装。\r\n\r\n# WLAN 服务是否启用\r\n\r\n接着看看服务有没有启动，同样用搜索打开服务，在一堆服务中，找到\r\n**【WLAN AutoConfig（WLAN 自动配置）】**\r\n\r\n![](../public/images/文章资源/笔记本-wi-fi-消失的解决方法/file-20250525123544569.jpg)\r\n\r\n也可以把启动类型配置为自动。\r\n\r\n### 服务没启动 or 启动后自动关闭\r\n\r\n如果启动失败可尝试：\r\n\r\n- 确保系统未被组策略/安全软件限制\r\n- 检查是否有安全策略阻止无线设备（如\"禁止安装未授权驱动\"）\r\n\r\n# 网络连接但不能上网\r\n\r\n有可能是自己的魔法上网工具没关，记得排查一下。\r\n\r\n还可能是 IP 配置问题 or DNS 问题，以管理员运行 CMD（同样搜索栏里搜索，并用管理员身份打开），依次执行以下命令来重启网络。\r\n\r\n```bash\r\n以管理员运行CMD，依次执行：\r\nipconfig /release\r\nipconfig /renew\r\nipconfig /flushdns\r\n```\r\n\r\n# 末\r\n\r\n如果以上还没解决，那有可能怀疑硬件方面的问题了。(耸肩\r\n",
    "relativePath": "thoughts/笔记本 Wi-Fi 消失的解决方法.md",
    "excerpt": "# 序\r\n\r\n由于我更喜欢 Win10 的界面风格（直角窗口和磁贴重度依赖患者），遂把本人的暗影骑士擎从默认的 Win11 强行刷至 Win10。\r\n刚刷完系统发现无限网络无法使用，美美从劈里啪啦（bilibili）下载了一个驱动大礼包安装。除了无限网络偶尔抽风，重启一下就解决了之外，一切都是岁月静好的。\r\n直到刚才，重启都无法像往常一样解决无线网络的抽风了。\r\n\r\n![](../public/i..."
  },
  {
    "url": "/thoughts/獠牙下的野蔷薇.html",
    "frontmatter": {
      "title": "獠牙下的野蔷薇",
      "date": "2025-04-19 14:00:00",
      "description": "骸云与烟雨的晨间的小插曲",
      "publish": true,
      "tags": [
        "原创角色"
      ]
    },
    "content": "\n# 晨\n\n今日破晓时分的寂静难得令人愉悦，我舒展着肩颈推开卧室门——\n\n直到餐桌上的\"礼物\"刺入眼帘。\n\n# 骨与花\n\n我凝视着那截斜插的骨，晨光正沿着它爬行，勾勒出干涸的暗色纹路。这匹狼甚至贴心地绑着束野蔷薇——用他昨晚捕猎时撕裂的亚麻衬衫碎片扎成蝴蝶结，花瓣上凝着露珠般的液滴，缓缓滑落。\n\n我用指尖捏着骨头，已经数不清收到骸云\"礼物\"的次数。从沼泽巨蜥的毒牙到嵌着碎晶的岩龟壳，现在他居然学会给战利品做造型了。\n那簇野蔷薇的根部还粘着可疑的暗红碎肉，让整个房间弥漫着铁锈与腐甜。\n而始作俑者正蜷在壁炉旁，蓬松尾巴盖着鼻尖随呼吸起伏。\n\n我揪住他后颈的刹那，那对毛茸茸的耳朵立即软绵绵耷拉成投降姿势。\n\n「早安气味。」\n他喉间滚出低沉的咕噜，「木屑、铁锈和...愤怒的蔷薇花？」\n\n「说过多少次——」\n「没有人类会喜欢尸体当装饰品，上个月你送给隔壁领主的礼物...」\n我掰着他的下巴，好让这匹笨狼能够清醒些，「是血淋淋的魔熊心脏？」\n\n「是最珍贵的部位，嗷。」骸云挣扎着歪头，「人类不是用红色表达爱意吗？」\n他全然不知那张通缉令正贴在隔壁城镇的公会告示栏——那潦草的炭笔把他画得像头直立的山猪。\n\n我抄起“礼物”，指节缓缓收紧在那截腿骨上，\n灰狼似乎意识到了危险，本能地弓背后缩。\n\n「这可是恐爪兽的腿骨！」他喉咙里挤出示弱的呜咽，「能当磨牙棒，或者...」\n我没理他，只用骨头的另一端在他额头上敲了一下，声响倒挺唬人——像敲在砧板上。\n他倒好，立刻哀嚎着缩成毛团，捂着脑袋一头栽进壁炉边，动作比上次石化蜥蜴撞飞还浮夸。\n\n「装疼倒是越来越熟练了。」我大步走过去，一手揪住他耳朵，一手将腿骨放在指间不紧不慢地旋着。\n「上次被石化蜥蜴撞飞都没见你哼一声。」\n话音未落，骨头猛地一收，精准戳向他腰侧那块软肋。\n这匹狼的胸腔里爆出一声夸张的呜咽，壁炉上的灰扑簌簌往下落。\n\n骨头在指间一停，收回手时我的嘴角抬了一点弧度。\n「下次记得，别想靠卖乖蒙混过关。」\n...\n\n# 沉于皮毛\n\n骸云被突如其来的责难击败，委屈地趴在一旁，一爪护着肚皮不肯动。\n我抽出小刀，贴着骨头慢慢剔去残痕。刀柄处的狼牙打磨得光滑温润，正好贴在掌心。是他乳牙期脱落的犬齿打磨而成的礼物，当时这只笨蛋满面血痕地出现，还以为自己要死于换牙了。\n想到这，我心口一软，嘴角也忍不住勾了起来。\n\n「哼，下次直接送花吧。」我扯了扯他垂落的尾巴尖，将处理好的腿骨收起。\n缓缓说到，「人类更喜欢不会蠕动的东西。」\n\n骸云尾巴抽了两下，像是在酝酿什么。\n「好！」\n下一秒，他整匹狼窜了起来。舌头几乎贴到脸，却又临门刹车，改用鼻尖蹭我下巴。\n我本想骂他，可一回神，整颗狼头已经拱进我颈窝，呼吸炽热得像贴了团小火。\n\n「鼻子离我远点！」我用手肘顶住他毛茸茸的胸口，语气不耐烦，动作却没用全力。  \n他得了便宜，蹭得更欢了。\n\n晨光沿着他耳尖滑落，交缠的影子贴在壁炉砖上。  \n野蔷薇横卧在桌上，花瓣沾着齿痕，比任何魔法造物都鲜活。\n",
    "relativePath": "thoughts/獠牙下的野蔷薇.md",
    "excerpt": "# 晨"
  },
  {
    "url": "/thoughts/数字世界的构建手册.html",
    "frontmatter": {
      "title": "数字世界的构建手册",
      "date": "2024-12-28 16:57:44",
      "description": "文字、图片、音频，这些东西是如何被保存在计算机中的？",
      "publish": true,
      "tags": [
        "计算机世界观"
      ]
    },
    "content": "\n## 数字存储\n\n计算机的内存本质上是一大片电路网络，其中每个最小的存储单位，是一个能被充电或放电的电容器。  \n充电代表 1，放电代表 0，因此一切数据只能以 **0 和 1** 的形式保存。\n\n每一个这样的“电的状态”，就是一个 **bit（位）**。\n\n### 二进制\n\n由于 bit 只有 0 和 1 两个状态，为了能表示更多的数, 计算机采用二进制存储数字，逢 2 进 1.\n这就是 **二进制**.\n\n```Java\n10 // 这是十进制的10\n\n0b1010 // 二进制表示的10，0b开头\n```\n\n不过，二进制一长就不容易看清了。为了解决这个问题，我们可以将它们按位数分组。\n为了解决这个问题，我们可以将它们按位数分组。\n\n![](../public/images/文章资源/数字世界的构建手册/file-20250612000805895.jpg)\n\n### 十六进制\n\n每 4 个 bit 为一组，能表示 0~15，对应十六进制的 0~F。\n\n> 这就是 **十六进制**（逢 16 进 1），通常以 `0x` 开头。\n\n![](../public/images/文章资源/数字世界的构建手册/file-20250612000816606.jpg)\n\n```java\n0xA //10 十六进制以0x开头\n```\n\n### 八进制\n\n也可以 三个 bit 为一组，那么每一组的十进制取值就是 0~7\n\n![](../public/images/文章资源/数字世界的构建手册/file-20250612000822808.jpg)\n\n这就是 八进制，逢 8 进 1。\n\n```Java\n012 //还是10 八进制以0开头\n```\n\n这些进制之间的关系，不只是为了表达省事，它们和底层内存的可读性、压缩存储空间都息息相关。\n\n# 字符存储原理\n\n数字能转为二进制，字符也可以。\n\n只要我们为每个字符 **规定一个数字（码点）**，再将这个数字转成二进制存储，就能把字符也塞进计算机里了。  \n这套 “字符 <-> 数字” 的映射关系，就叫做 **编码表**。\n\n### ASCII 编码表\n\n最早的编码表之一是 ASCII。它定义了 128 个常用字符（字母、数字、符号等），每个都有唯一的码点（Code Point）。\n\n![](../public/images/文章资源/数字世界的构建手册/file-20250612000832734.jpg)\n\n因为 128 的最大值只需要 7 位二进制，所以后来我们约定 **每 8 个 bit（一个字节，Byte）** 为基本存储单位。\n\n**单位换算**：\n\n> 1 KB = 1024 B\n> 1 MB = 1024 KB\n> 1 GB = 1024 MB\n> 1 TB = 1024 GB\n\n### GBK 汉字编码\n\n由于只有 128 个字符，ASCII 码表覆盖有限，因此各个国家都需要给自己单独规定编码表。\n\n我国的 **汉字内码拓展规范** 简称 GBK，GBK 是对 ASCII 的扩展，新增了超过两万个汉字，每个汉字用 **两个字节** 表示。\n\n### Unicode 与 UTF 编码\n\n如果有一万个国家, 那就得有一万种不同的编码.\n\n于是，国际标准组织（ISO）提出了统一编码方案 —— **Unicode**，也叫 统一/万国(union)码，它囊括了全球大多数语言字符（14 万+），彻底解决编码冲突问题。\n\n其中包含 65536 个常用基础字符，剩下的是补充字符。\n通常情况下，汉字的码点同样占两个字节。\n\n接下来可能有点复杂，我们先来搞清楚两个常见但容易混淆的概念：\n\n- **码点（Code Point）**：就像“身份证号”，表示某个字符在“字符大全”里的编号。\n  > 比如：字母 `A` 的码点是 `U+0041`，汉字 `你` 的码点是 `U+4F60`。\n- **编码（Encoding）**：把码点翻译成能在电脑里储存的二进制数字。\n  > 不同的编码方案，用的二进制规则不一样。\n\nUnicode 本身只是个码点系统，具体怎么编码，还得靠实现方式。\n最常见的编码方式有：\n\n- **UTF-8**：变长编码，使用 1~4 个字节表示一个字符，常用字符占位少，最为普及。\n- **UTF-16**：也是变长编码，常用字符用 2 字节，补充字符用 4 字节。\n- **UTF-32**：固定 4 字节，无需变化，但空间占用大。\n\n其中，UTF-8 是现实开发中使用最多的一种编码方式，兼容 ASCII 且节省空间。\n\nUTF-8 会根据码点的大小，分配不同的字节数量：\n\n| 码点范围        | UTF-8 编码格式                           | 所需字节 |\n| --------------- | ---------------------------------------- | -------- |\n| `U+0000`~`007F` | `0xxx xxxx`                              | 1 字节   |\n| `U+0080`~`07FF` | `110x xxxx 10xx xxxx`                    | 2 字节   |\n| `U+0800`~`FFFF` | `1110 xxxx 10xx xxxx 10xx xxxx`          | 3 字节   |\n| `U+10000`以上   | `11110xxx 10xx xxxx 10xx xxxx 10xx xxxx` | 4 字节   |\n\n例如，“你” 字在 Unicode 表里的编号是：`U+4F60`（码点）\n\n来看它在不同 UTF 编码下的样子：\n\n| 编码方式 | 存储结果（16 进制） | 占用字节数 |\n| -------- | ------------------- | ---------- |\n| UTF-8    | `E4 BD A0`          | 3 字节     |\n| UTF-16   | `4F60`              | 2 字节     |\n| UTF-32   | `00004F60`          | 4 字节     |\n\n也就是说，**码点相同，但存储方式不同**。UTF-8 是现实中最常见的，因为它能节省空间、兼容旧系统。\n\n# 图像的存储\n\n计算机图像是由无数个像素点（Pixel）组成的网格。\n当像素点足够小，足够多时，就组成了人眼能识别的图像了。\n\n显示器的每一个像素点都包含 **红绿蓝(R/G/B)** 三个子像素，我们称为三基色。\n通过调整每种颜色的亮度，就能组合出世界上所有的颜色。\n\n![](../public/images/文章资源/数字世界的构建手册/file-20250612000843792.jpg)\n\n每个颜色通道的亮度范围是 0~255，正好可以用三个十六进制数表示（00~FF）：\n\n```\n#RRGGBB\n```\n\n例如, 白色是所有颜色亮度最大值 255, 对应的十六进制是 FF\n\n```\n#FFFFFF\n```\n\n这就是著名的 **RGB 模型**。\n\n# 音频的存储\n\n声音来自振动，关键在两个维度：\n\n- **频率**：高低\n- **振幅**：响度\n\n![](../public/images/文章资源/数字世界的构建手册/file-20250612000853185.jpg)\n\n计算机存声音，大致分三步：\n\n1. **采样**（Sampling）  \n   固定时间间隔对声波进行测量。间隔越短，采样率越高，声音越还原。\n2. **量化**（Quantization）  \n   将每个采样值用一定精度转为数字。精度越高，误差越小。\n3. **编码**（Encoding）  \n   把这些量化值转成二进制存储。\n\n采样越密、量化越细，音质越好，但存储空间也越大。\n",
    "relativePath": "thoughts/数字世界的构建手册.md",
    "excerpt": "## 数字存储"
  },
  {
    "url": "/thoughts/环境变量.html",
    "frontmatter": {
      "title": "环境变量",
      "date": "2024-12-21 15:04:30",
      "description": "环境变量就像系统的\"快捷地址簿\"。",
      "publish": true,
      "tags": [
        "计算机世界观"
      ]
    },
    "content": "\n# 序\n\n**如何通过\"运行\"对话框打开程序？**\n\n1. 按下 `Win + R` 打开\"运行\"对话框。\n2. 输入 `cmd` 并回车，即可打开命令提示符（cmd 也算是一个 exe 程序）。\n\n![运行对话框](../public/images/文章资源/环境变量/file-20250611225107282.jpg)\n\n但如果你尝试输入一个别的 exe，例如 `QQ.exe`，可能会发现无法运行——这正是环境变量在起作用！\n\n![无法运行QQ](../public/images/文章资源/环境变量/file-20250611225112566.jpg)\n\n# 环境变量\n\n**环境变量是什么？**  \n环境变量就像系统的\"快捷地址簿\"。当你输入一个程序名（如 `cmd`），系统会快速从地址簿（Path 变量）中查找程序的位置。\n\n>  **注意**  \n> 修改环境变量需谨慎！错误操作可能导致系统无法找到关键程序（如系统忘记如何\"呼吸\"）。\n\n### 如何查看环境变量？\n\n打开设置, 在 关于 系统 -> 系统高级设置 中即可找到`环境变量`.\n\n![系统设置](../public/images/文章资源/环境变量/file-20250611225123086.jpg)\n\n也可以按下 `Win + S` 搜索\"环境变量\":\n\n![搜索环境变量](../public/images/文章资源/环境变量/file-20250611225127476.jpg)\n\n打开面板, 我们不难发现, cmd 的路径 `(C:\\Windows\\System32)` 就在其中:\n\n![环境变量面板](../public/images/文章资源/环境变量/file-20250611225132939.jpg)\n\n这是系统变量的界面：\n\n![系统变量界面](../public/images/文章资源/环境变量/file-20250611225144095.jpg)\n\n因此, \"运行\"对话框实际上是在环境变量配置的路径中寻找程序.\n如果能够找到指定程序的路径就运行,\n反之则报错.\n\n![运行路径错误](../public/images/文章资源/环境变量/file-20250611225153524.jpg)\n\n你可能注意到了 CMD 的实际目录是 `C:\\Windows\\System32`\n而在环境变量 PATH 中指定的目录是 `%SystemRoot%\\system32`\n\n这是由于虽然系统默认安装在 C 盘, 但是也可由用户指定位置.\n为了灵活应对, Windows 就规定了 `%SystemRoot%` 的变量来存放系统安装的位置.\nWindows 安装程序会将`%SystemRoot%`环境变量设置为安装目录的路径，通常是`C:\\Windows`.\n\n# 配置环境变量\n\n一般而言, 我们并不需要通过 \"运行\" 对话框, 或是使用命令行来运行 QQ 这种程序.\n环境变量更多地用于配置那些在命令行中运行的程序，比如 Java 和 Python 这样的开发工具.\n\n使用命令行 运行程序时, 命令行会:\n\n- 默认会在 **当前的目录** 下寻找指定的程序.\n- 未找到, 则会尝试去 **Path 环境变量** 中指定的路径寻找.\n\n::: danger 再次提醒!\n错误地编辑注册表可能会损坏系统!\n编辑更改注册表前请确保你知道你在做什么.\n:::\n\n那就拿熟悉点的 QQ 来举例吧!\n\n### 方式一 默认路径\n\n我的 QQ 安装在了这个文件夹下:\n\n![QQ安装目录](../public/images/文章资源/环境变量/file-20250611225203271.jpg)\n\n我们可以尝试通过 CMD 命令行 打开, 在桌面时 `win`+`r` `回车`, 快捷打开命令行.\n\n![打开命令行](../public/images/文章资源/环境变量/file-20250611225208537.jpg)\n\n可以观察到当前命令行所在的路径为 `C:\\Users\\Wreckloud`\n显而易见地, QQ 并不在这个目录中, 尝试运行一下, 直接输入应用程序的名称即可运行:\n\n```bash\nQQ.exe\n```\n\n也是在预料之内的:\n\n![QQ运行失败](../public/images/文章资源/环境变量/file-20250611225214913.jpg)\n\n接下来我们将命令行的路径切换到 `QQ.exe` 所在的目录中:\n常用以下两种方式打开指定的路径.\n\n#### 在命令行中使用指令切换路径\n\n使用指令: `cd 路径` 即可将命令行切换到指定的路径.\n\n```bash\ncd D:\\Program Files\\Tencent\\QQNT\n```\n\n> 关于命令行的更多指令, 请 [[windows命令行与批处理|看这里!]]\n\n#### 在文件浏览器中用命令行打开指定路径\n\n我更推荐:\n直接在文件夹中找到需要的文件, 然后在地址栏输入 `cmd` 并回车.\n\n![文件夹地址栏](../public/images/文章资源/环境变量/file-20250611225222850.jpg)\n\n两种方式都能让命令行转到指定的路径中:\n\n![切换路径](../public/images/文章资源/环境变量/file-20250611225227400.jpg)\n\n再尝试在这个路径下输入 `QQ.exe` .\n\n![QQ成功运行](../public/images/文章资源/环境变量/file-20250611225231600.jpg)\n\n成功地打开了, 但这种方式并不是重头戏.\n这样也成功验证了 在安装目录以外的地方没办法使用命令行打开 QQ.\n\n### 方式二 Path 中的路径\n\n只要类似 cmd 的, 将自己的安装路径配置在 Path 中, 命令行就可以在任意位置找到并打开 QQ.exe 了.\n\n打开 环境变量 ,在 系统变量中 双击 Path.\n接着将 `D:\\Program Files\\Tencent\\QQNT` 配置到 Path 环境变量中\n\n![配置Path变量](../public/images/文章资源/环境变量/file-20250611225240445.jpg)\n\n打开一个 **新的** 命令行, 尝试在任意位置执行 QQ.exe:\n\n![任意位置运行QQ](../public/images/文章资源/环境变量/file-20250611225244869.jpg)\n\n> 带后缀(.exe)地, 不带后缀地都可以执行此程序.\n\n# 环境变量的用途\n\n环境变量实际可用于 版本控制.\n例如 Java, 我们可以在一台计算机中安装多个版本的环境变量.\n\n在 环境变量 Path 中指定所需要的 Java 路径(注意指定的是 `java.exe` 与 `javac.exe` 所在的路径):\n\n![Java路径配置](../public/images/文章资源/环境变量/file-20250611225251189.jpg)\n\n将此路径新建到 环境变量的 Path 中.\n打开一个新的终端查看 Java 版本.\n\n```bash\njava -version\n```\n\n我们提到过, Path 中有许多重要的路径, 不建议直接修改 Path 的内容.\n我们可以模仿系统的 `%SystemRoot%` 做法, 也为 Java 设置一个 `%JAVA_HOME%` 的变量.\n`% %`代表引用环境变量.\n\n这样, 控制版本时, 只需要在外修改变量的值, 从而避免频繁修改 Path 的内容.\n\n### 具体步骤\n\n在环境变量中新建系统环境变量:\n\n```text\nJAVA_HOME\n```\n\n![JAVA_HOME设置](../public/images/文章资源/环境变量/file-20250611225259820.jpg)\n\n再在 Path 中新建, 引用词变量 (注意指定的是 `java.exe` 与 `javac.exe` 所在的路径):\n\n![Path引用变量](../public/images/文章资源/环境变量/file-20250611225305721.jpg)\n\n# 末\n\n总之, 在绝大部分的情况下, 我们配置环境变量只是为了在任何一处都能用命令行或是别的什么, 来便利地运行所需程序.\n\n这是一个很常用的功能.\n既然如此, 现代的软件在设计时就考虑到了这一点.\n\n在它们安装时, 通常会自带有将安装目录写入 Path 的选项:\n\n![安装选项](../public/images/文章资源/环境变量/file-20250611225312015.jpg)\n\n如果在命令行中遇到了:\n`xxx' 不是内部或外部命令，也不是可运行的程序或批处理文件.`\n那么就检查一下 Path 路径是否配置正确吧.\n",
    "relativePath": "thoughts/环境变量.md",
    "excerpt": "# 序"
  },
  {
    "url": "/thoughts/从一盏灯开始的文明.html",
    "frontmatter": {
      "title": "从一盏灯开始的文明",
      "date": "2024-12-17 12:44:22",
      "description": "这篇文章的初稿是我初入编程时看视频记下的，现在拿出来重新整理了一下，这篇也是写给当时的我，介绍什么是编程。",
      "publish": true,
      "tags": [
        "计算机世界观"
      ]
    },
    "content": "\n提问！一盏正常工作的灯有几种状态？\n\n答案似乎不言而喻——**通电亮起** 与 **断电熄灭** 两种状态。\n\n但若将视野投向计算机内部，这个简单的物理现象正在以每秒数十亿次的频率上演。正是这些微观开关的精密舞蹈，支撑起人类文明史上最庞大的电子巨兽。\n\n# 第零章：二进制的创世纪\n\n人类用 26 个字母构建文明，计算机用 0 与 1 书写史诗。前者诞生于感性的诗意，后者扎根于绝对的理性：\n\n- 高电平=逻辑 1 ➔ 电子世界的\"是\"\n- 低电平=逻辑 0 ➔ 电子世界的\"否\"\n\n这些电子脉冲如同数字时代的甲骨文，通过最基本的逻辑运算编织出机器认知世界的法则：\n\n- **与门（AND）**：两个 1 相遇才诞生光明\n- **或门（OR）**：存在即合理，任一 1 存在即点亮世界\n\n当 1947 年贝尔实验室的肖克利团队将这类逻辑刻入晶体管时，他们或许未曾想到，这些砂砾中的开关将成为驯服电子巨兽的缰绳。\n\n# 第一章：机械巴别塔的建造者\n\n当 1946 年 ENIAC 在费城实验室点亮第一个真空管时，程序员们不得不用最原始的灯语与机器对话——他们拨动数千个开关的位置，如同黑暗中织网的蜘蛛，用二进制丝线直接操控硬件，只为让这头电子巨兽理解最简单的算术。\n\n```text\n00101010 01110101 11001011\n```\n\n这类机器语言虽然高效，但每个字符都需要精准的电子脉冲对应，如同在针尖上雕刻天书，是反人性的。\n\n计算机先驱们很快发现，为什么不用直接用几个简单的字符来代表一长串晦涩的电子咒语？\n于是汇编语言应运而生:\n\n```text\n; 机器码                    → 汇编指令\n; 10110000 01100101        → MOV AL, 65h\n; 00000100 00000001        → ADD AL, 1\n```\n\n用 几个简单的字母 `MOV AX, BX` 就能替代 一长串的机器编码。这不仅仅是符号替换，更是人类首次声明自己不是开关的奴隶，而是逻辑的祭司。\n从此，巨兽开始理解人类的密码。\n\n# 第二章：抽象即力量\n\n真正的技术革命始于对重复的厌倦。\n当 FORTRAN 之父约翰·巴克斯写下`X=(A+B)*C`时，他不仅发明了第一个高级语言，更点燃了数字文明的**抽象引擎**。这行看似简单的公式，实则是跨越人机鸿沟的巴别塔：\n\n```text\n! 1957年的革命性代码示例\nX = (A + B) * C  ! 直接对应数学表达式\n```\n\n对比当时繁琐的汇编操作：\n\n```text\n; 实现相同功能的汇编代码\nLOAD A\nADD B\nMULT C\nSTOR X\n```\n\n这场革命如同人类从象形文字进化到字母文字——**表达能力不变，认知成本骤降**。\n\n认知成本骤降, 带来了使用机会的增加, 随之而来的是问题和矛盾：\n\n> **高效率与灵活性无法共存**\n\n由此, 高级语言分化出两大智慧形态，恰似东方水墨与西方油彩的并立：\n\n- 科学家需要数值计算快如闪电 → 发展出提前编译的极致优化\n- 教育者希望即时看到代码结果 → 开创即时解释的灵活应变\n\n正是这种分工，让计算机既能驾驭航天器的精准控制（编译型），也能实现网页交互的瞬息万变（解释型）。\n\n# 第三章：工具即进化\n\n所有伟大的发明都始于同一个念头：\"能不能更省事？\" 程序员们的偷懒史，演化成一场让机器理解人性的史诗远征。\n当我们追溯工具演进史，会发现每个划时代工具的诞生，都在回答同一个终极问题：**如何让机器更懂人性？**\n\n1983 年的硅谷实验室里，一群头发蓬乱的工程师正在用最原始的方式驯服代码：他们左手翻阅着砖头般的《Unix 系统手册》，右手在三个终端间疯狂切换——一个编辑代码，一个编译程序，最后一个监控内存地址。\n直到某个清晨，一个叛逆者将这三个窗口缝合在同一个界面，编程史上的普罗米修斯之火就此点燃。\n第一个集成开发环境问世时，程序员终于摆脱了**碎片化工具链**的黑暗时代。\n\n早期编写代码需要切换多个工具（编辑器、编译器、调试器），而集成开发环境将代码编写、调试、测试整合到单一界面。\n\n当 Eclipse IDE 首次展示**代码自动补全**功能时，全场开发者起立鼓掌——他们知道，那个需要背诵整本 API 手册的时代结束了，现代 IDE 早已进化为智能工作台。\n这就像中世纪的炼金术士突然获得了现代化学实验室，让**专注力**真正回归逻辑创造本身。\n\n2005 年的 Linux 社区正经历至暗时刻。由于缺乏版本控制，来自全球的代码如洪水般涌入，版本冲突让系统摇摇欲坠，成百上千的代码贡献让系统濒临崩溃。托瓦兹用两周时间写出了 Git，从此代码世界有了自己的时光机：\n\n```bash\n# 查看代码进化史\ngit log --graph --pretty=format:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %C(green)(%cr)%Creset' --abbrev-commit\n```\n\n这条命令会展示出代码的进化树，每个分支都是平行宇宙的入口。\n如今，GitHub 上每秒产生 7 个新代码库，这些数字巴别塔的基石，正是当年那个芬兰青年为自救写出的工具。\n\n2013 年，所罗门·海克斯在旧金山演示 Docker 时，用了一个精妙比喻：\"我们要把代码装进集装箱\"。就像麦哲伦不需要为每片海域重造航船，Docker 让程序带着自己的运行环境环球航行。他的 Docker 将代码与运行环境封装成标准集装箱，终结了\"在我机器上能跑\"的千年魔咒。\n\n真正的范式革命在 2021 年悄然而至，GitHub Copilot 横空出世。当程序员输入注释：\"// 计算斐波那契数列\"，AI 自动补全了代码。\n此刻，编程语言正在经历它的巴别塔崩塌，人与机器的对话终于跨越了语法的鸿沟。\n\n# 终章：未完成的史诗\n\n回望来时路，从 ENIAC 的 18000 个真空管到如今指甲盖大小的百亿晶体管芯片，这段进化史本质上是对\"开关艺术\"的极致演绎。当我们用人工智能生成代码、自动补全时，那个需要直接操控开关的原始野兽，已蜕变为理解人类意图的智能体。\n\n或许某天，当量子比特打破 0/1 的二元禁锢，我们又将见证新的语言革命。但无论如何进化，那些在硅基世界里翩翩起舞的电子，永远是人类理性之光的延续。\n\n此刻在你指尖流转的每寸微光，都栖息着整部数字文明史。下次锁屏时，请留意那转瞬即逝的暗影：那是光的呼吸，是八十年前费城实验室的余烬，也是量子计算机苏醒前的晨露。所有奇迹的源代码，始终是开与关的古老韵脚。\n",
    "relativePath": "thoughts/从一盏灯开始的文明.md",
    "excerpt": "提问！一盏正常工作的灯有几种状态？"
  },
  {
    "url": "/thoughts/互联网与星辰大海.html",
    "frontmatter": {
      "title": "互联网与星辰大海",
      "date": "2024-11-21 19:44:28",
      "description": "Web就是常提到的万维网，我们可以通过浏览器访问和查看网页",
      "publish": true,
      "tags": [
        "计算机世界观"
      ]
    },
    "content": "\n# 序\n\n**Web（万维网，World Wide Web）**，说白了就是你通过浏览器访问的那些网站。比如打开淘宝、B 站、知乎，点进去就能看到网页、视频、图文——这都属于 Web 的范畴。\n\nWeb 是建立在全球互联网之上的一套系统，它让网站变得可视化、可交互。你输入一个网址（URL），按下回车，能看到一个页面跳出来，这就是 Web 的魅力。\n\n但要实现这样的效果，背后其实有一整套技术结构在支撑——这就是我们接下来要说的：\n\n# Web 网站结构\n\n一个 web 网站的核心, 是由以下三个部分组成:\n\n- 前端程序：负责将数据以好看的样式**呈现**出来。\n- 后端/服务端程序：负责具体的业务逻辑的**处理**。\n- 数据库：负责数据的**存储和管理**。\n\n![](../public/images/文章资源/互联网与星辰大海/file-20250611230049938.jpg)\n\n当我们在浏览器地址栏, 输入 url 地址, 一敲回车.\n此时首先访问到的是服务器中部署的 **前端程序**, 而前端程序仅仅负责将数据以好看的样式呈现出来.\n\n前端展示的数据从哪里来呢? 前端程序会发送请求来请求**服务端/后端程序**，由服务端/后端程序来查询**数据库**, 然后将数据库查询的数据返回给前端.\n\n最终, 前端程序再将数据渲染, 再由浏览器来解析前端程序.\n这样, 一个精美的网页就展示在浏览器中了.\n\n# Web 前端\n\n前端的任务很明确：**把数据好看地展示出来，让用户能看懂、能操作**。\n\n前端开发的三大支柱，也叫“前端三件套”是：\n\n- **HTML**：网页的“骨架”，负责结构，比如文字、图片、按钮的位置。\n- **CSS**：网页的“外衣”，负责样式，比如颜色、字体、布局。\n- **JavaScript**：网页的“大脑”，负责交互，比如点击按钮时发生什么、数据怎么动态更新。\n\n> 有了这三者，就可以搭建出一个完整的网页页面。\n\n另外，现代前端中还会用到：\n\n- **Ajax**：让网页在不刷新整个页面的情况下，从后端获取数据。\n- **Vue、React 等框架**：更高效地开发复杂前端页面。\n- **UI 框架（如 Element Plus、Tlias）**：提供一套现成的界面组件，比如按钮、表单、弹窗。\n\n# Web 后端\n\nWeb 后端开发，主要负责处理前端发送的请求、执行业务逻辑、与数据库交互以及管理服务器.\n后端是网站和应用程序的\"指挥官\"，它处理着数据的存储、检索和业务逻辑。\n\n后端的职责包括：\n\n- 处理前端发来的各种请求（比如登录、下单）\n- 执行对应的业务逻辑\n- 查询和更新数据库\n- 返回处理结果给前端\n\n我们日常使用的网页资源有两种：\n\n- **静态资源**：比如 HTML、CSS、JS、图片、音频等，内容写死了，不会变化。\n- **动态资源**：由后端根据用户请求生成，比如个性化推荐、订单详情页面，每次请求内容可能都不一样。\n\n![](../public/images/文章资源/互联网与星辰大海/file-20250611230101428.jpg)\n\n> 以前 Java 后端开发用的 Servlet、JSP 这些技术现在已经淘汰，现代企业开发基本都是基于 **Spring 框架** 来处理动态资源。\n\n这些后端程序会部署在 Web 服务器上，比如 **Tomcat**，并通过浏览器与之通信。这种通信主要依赖的协议是：\n\n- **HTTP 协议**：Web 上传输信息的规则。\n\n# BS 架构 vs CS 架构\n\n我们常说的网站系统，其实属于一种架构模式，叫做：\n\n- **BS 架构**（Browser/Server）：浏览器-服务器架构。用户只需要一个浏览器就可以访问服务端提供的资源，省去了安装客户端的麻烦。\n\n而相对的还有：\n\n- **CS 架构**（Client/Server）：客户端-服务器架构。用户需要专门下载一个应用程序来使用，比如一些老的软件系统、QQ PC 客户端等。\n\n# 末\n\n**Web 就是浏览器访问的万维网世界，它由前端、后端和数据库构成，前端负责展示，后端负责处理，数据库负责存储，一起合作，让我们得以看到和使用各种网站服务。**\n\n如果你想学习 Web 开发，前端三件套是起点，而了解整个 Web 的工作流程，是打基础的第一步。\n",
    "relativePath": "thoughts/互联网与星辰大海.md",
    "excerpt": "# 序"
  },
  {
    "url": "/thoughts/远古卷轴.html",
    "frontmatter": {
      "title": "远古卷轴",
      "date": "2024-04-16 17:15:29",
      "description": "名为「烟雨」的少女与狼兽人「骸云」，携卷轴踏入迷雾森林，将揭秘古老祭坛的宝石传说。",
      "publish": true,
      "tags": [
        "原创角色"
      ]
    },
    "content": "\n# 序\n\n月光被树冠的獠牙撕碎，在烟雨垂落的黑发上碎成细小的光斑。她单手拎起羊皮卷轴一抖：\n「看穿幻象的宝石，总比你那根烧焦的火蜥蜴尾巴值钱？」\n\n一旁的狼兽人骸云正蜷着后腿蹲坐在树根处，尾巴有一搭没一搭地拍打地面。他弓着脊背调试弓弦的姿态，总让人想到铁匠铺里歪斜的招牌。\n「至少，够补偿旅店老板的屋顶窟窿…」\n\n少女突然气愤地把卷轴怼到狼人鼻尖，陈年的鞣制气味直冲鼻腔。骸云的左耳应激般后折成投降角度，一个响亮的喷嚏炸开。\n「那是谁非要叼着活火蜥蜴，在房梁上蹦跶来着？」\n\n委屈的呜咽声从喉咙深处滚出，看样子是拒绝回答这个问题。\n\n烟雨盯着他那副油盐不进的蠢样，鼻腔里逸出一声冷哼。她猛地抽回怼在他脸上的卷轴，仔细端详起羊皮表面：「这鬼画符，你确定指向东南？」\n\n「这可是用三张上等雪貂皮换的…」骸云喉间咕哝，声音闷得像含了口泥浆。\n「瘴气在东北角——」他鼻翼忽然翕动，猛地抬头，「大小姐，你地图拿倒了！」\n\n# 雾径\n\n月光被树冠的獠牙撕碎，铺在通往雾深处的腐叶小径上。\n\n「祭坛就在里面。」烟雨的声音割开沉寂，一丝不易察觉的紧绷藏在尾音里。「卷轴说，看透虚妄的宝石就在森林心脏的祭台上。」\n\n「听起来能换座小金山。」云尾尖稍稍抬高，扫开脚边的湿气。\n「白天温顺得像只羊，晚上正是露出獠牙的时候！」他爪尖拨弄着箭袋里的羽翎，「头一回正经探险，大小姐？比工会那些挠痒痒的委托带劲吧？」\n\n「哼，那些玩意儿连热身都算不上。」烟雨下颌微扬。\n\n「行行行，知道你厉害。」骸云无奈耸肩，「没那些委托'挠痒痒'，咱俩的窝怕是早让风刮跑了... 」\n\n烟雨打量着自己的搭档，她想象着眼前这只狼那双原本锐利的野兽眼睛如今变得泛着水光。\n昔日威风凛凛的灰狼瑟缩在破木箱后，耳朵缺角，爪垫裂口渗着泥血，湿漉漉的鼻头绝望地拱着半块发霉的面包屑——骄傲的兽人，硬生生熬成一条眼泛泪光的丧家之犬。\n\n这荒谬又可怜，却让她心底某个角落莫名一软。\n_我可不会让这种事发生_\n这念头清晰得如同刀锋划过骨节。但明面上，促狭的笑意已爬上嘴角。\n\n「哦，一只落魄的丧家犬？也不赖嘛！」\n\n「得了吧！」狼一脸苦笑着摇摇头，「沦落不到那份上！」\n\n箭袋咔哒扣紧，他用长吻指向翻涌的浓雾。\n「该走了。」\n\n一黑一灰两道剪影并肩切入浓雾，转瞬被吞噬殆尽。\n\n# 凝胶\n\n越往深处，景色越发朦胧。月光变得朦胧不清，只能勉强照亮脚下崎岖的小路，四周寂静得只剩下他们的脚步声和树叶的沙沙声。\n\n穿过一片灌木丛生的地带，对于经验丰富的冒险者来说，这里的每一个阴影都可能隐藏着危险。\n正如二人所料，一只史莱姆悄无声息地从灌木丛中现身\n\n少女只需与狼一个对视， 无需多言。\n\n骸云利爪破风，撕裂迷雾的尖啸——本该是终结。\n\n但史莱姆凝胶状的躯壳却只凹陷下去，发出低沉的嗡鸣。烟雨的身影掠过，长刀在月光下划出一道银色弧线。银弧一闪而逝，如流星坠入泥沼。怪物溶解，只余一地微光粘液，蒸腾着刺鼻的酸腐气。\n\n「啧。」\n她收刀归鞘，靠上旁边一块覆满青苔的岩石，黑发如瀑垂下。\n\n「月光让它们变难缠了。」骸云舔了舔爪子，鼻尖翕动，仔细分辨着空气中残留的异样。他俯身掏出小瓶，爪尖谨慎地剐蹭那滩粘稠物质。\n「这玩意...卖给炼金术士的话，」瓶口在月光下折射出贪婪的光，「能比普通凝胶贵几倍？」\n\n「又闻到金币味了？」烟雨目光落在他专注的脊背上。\n\n她的记忆里除了骸云，一向独来独往，自给自足惯了，金币对她并非必须。她也懂交易，懂情报的价值。只是...狼？做生意？她实在想象不出这只灰狼龇着牙跟人讨价还价的样子——不会把客人吓跑吗？\n\n视线随意勾勒着眼前的灰狼：稍比她高壮的北方兽人，据他说，自己立志成为吟游诗人而离群索居。在族群里或许还是只幼崽，此刻那身灰白皮毛在月下泛着银泽，尾巴尖正因专注而微微摇晃。\n\n_呵，不过是一只...会自己梳毛的大狗罢了。_\n难道说，**狼**不可貌相，那试试这样呢？\n\n一抹促狭的笑意爬上烟雨嘴角。她悄无声息地潜近，靴底碾碎腐叶的微响被雾吞没。手指精准地攫住那蓬松晃动的尾尖，猛地一拽！\n\n「嗷——！」骸云惊跳而起，瓶子脱手滚落。恶作剧得逞的少女肩膀轻颤，憋着笑：\n「知道吗？你这尾巴，」她指尖捻了捻柔软的毛发，「手感绝佳。」\n\n低沉的咆哮在胸腔震荡：「放开！全糟蹋了！」灰狼扭身挣扎。\n\n「这可是你说的噢~」\n毫无预兆地松手。重心顿失的狼狼狈扑地，激起一片湿叶和泥点。\n「啧啧，真够'狼'狈的。」烟雨踱步上前，靴尖轻点他拱起的后腰。\n\n不满的呜咽闷在泥土里。重获自由的灰影骤然暴起，带着草屑和怒气，猛扑！\n\n少女纤细的身形被轻易压倒，陷进湿冷的泥土与草根。她却浑不在意，双手精准地捧住那张毛茸茸的脸狠命揉搓。粗糙皮毛下是温热的兽息，金黄瞳孔里燃烧着被戏弄的恼火。\n\n危险仍在雾中潜行，而两人滚作一团。\n\n",
    "relativePath": "thoughts/远古卷轴.md",
    "excerpt": "# 序"
  }
]